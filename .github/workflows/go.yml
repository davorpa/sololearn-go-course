name: Golang CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  avoid_reduncy:
    name: Cancel previous runs
    runs-on: ubuntu-18.04
    steps:
    - uses: styfle/cancel-workflow-action@0.9.1
      with:
        access_token: ${{ github.token }}

  lint:
    name: Lint with Go ${{ matrix.go-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      working-directory: ./src

    strategy:
      matrix:
        os:
#          - ubuntu-18.04
#          - ubuntu-20.04
          - ubuntu-latest
#          - windows-latest
#          - macos-latest
        go-version:
          # Latest n versions
#          - 1.15.x
          - 1.16.x
#          - 1.17.x

    steps:

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        stable: 'true'
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Restore cache
      uses: actions/cache@v2
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Check code format diffs
      run: |
        FILEFMTS=$( gofmt -s -l . ); FILEFMTS_COUNT=$( echo $FILEFMTS | wd -l );
        if [ "$FILEFMTS_COUNT" -gt 0 ]; then echo -en "::warning::There are $FILEFMTS_COUNT files to be reformatted:\n\n$FILEFMTS\n\n"; gofmt -s -d -e . ; fi

#    - name: Fix code format
#      run: find . -name '*.go' | while read -r file; do gofmt -s -w "$$file"; goimports -w "$$file"; done
#      if: startsWith(matrix.os, 'ubuntu-')

#    - name: Ensure code format
#      run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
#      if: startsWith(matrix.os, 'ubuntu-')

#    - name: Build
#      run: go build -v ./...

#    - name: Test
#      run: go test -race ./...
